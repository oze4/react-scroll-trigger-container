{"version":3,"sources":["react-scroll-trigger.js","AppScrollTrigger.js","index.js"],"names":["ScrollTrigger","props","onScrollThrottled","throttle","onScroll","bind","throttleScroll","trailing","onResizeThrottled","onResize","throttleResize","state","isCustomContainerRef","inViewport","progress","lastScrollPosition","lastScrollTime","this","containerRef","document","documentElement","setState","addEventListener","triggerOnLoad","checkStatus","prevProps","prevState","removeEventListener","onEnter","onExit","onProgress","elementRect","ReactDOM","findDOMNode","element","getBoundingClientRect","scrollingElement","querySelector","viewportEnd","Math","max","clientHeight","window","innerHeight","top","bottom","position","scrollTop","scrollY","velocity","abs","Date","now","min","height","children","component","elementMethod","React","isValidElement","cleanProps","ref","Component","defaultProps","containerStyle","overflow","border","fakePageStyle","width","TOTAL_FAKE_PAGES","example_code_how_to_use","AppScrollTrigger","useState","visible","setVisible","setProgress","regularEnter","setRegularEnter","regularProgress","setRegularProgress","myRef","setMyRef","useEffect","b","getElementById","t","setTimeout","scrollIntoView","to","INIT_SCROLL","message","handleOnEnter","index","event","newVisible","sort","handleOnExit","filter","v","handleOnProgress","name","r","style","id","className","JSON","stringify","Array","from","el","rel","target","href","key","_","App","render"],"mappings":"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","file":"static/js/main.ea76341d.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport throttle from 'lodash.throttle';\r\nimport cleanProps from 'clean-react-props';\r\n\r\nclass ScrollTrigger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onScrollThrottled = throttle(this.onScroll.bind(this), props.throttleScroll, {\r\n            trailing: false,\r\n        });\r\n\r\n        this.onResizeThrottled = throttle(this.onResize.bind(this), props.throttleResize, {\r\n            trailing: false,\r\n        });\r\n\r\n        this.state = {\r\n            isCustomContainerRef: false,\r\n            inViewport: false,\r\n            progress: 0,\r\n            lastScrollPosition: null,\r\n            lastScrollTime: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Tells us if a custom 'containerRef' has been supplied as a prop.    \r\n        if (this.props.containerRef !== (document.documentElement || 'html')) {\r\n            this.setState({ isCustomContainerRef: true });\r\n            this.props.containerRef.addEventListener('resize', this.onResizeThrottled)\r\n            this.props.containerRef.addEventListener('scroll', this.onScrollThrottled);\r\n        } else {\r\n            addEventListener('resize', this.onResizeThrottled);\r\n            addEventListener('scroll', this.onScrollThrottled);\r\n        }\r\n\r\n        if (this.props.triggerOnLoad) {\r\n            this.checkStatus();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.throttleScroll !== this.props.throttleScroll) {\r\n            this.onScrollThrottled = throttle(this.onScroll.bind(this), this.props.throttleScroll, {\r\n                trailing: false,\r\n            });\r\n\r\n            if (this.state.isCustomContainerRef) {\r\n                this.props.containerRef.removeEventListener('scroll', this.onScrollThrottled);\r\n                this.props.containerRef.addEventListener('scroll', this.onScrollThrottled);\r\n            } else {\r\n                removeEventListener('scroll', this.onScrollThrottled);\r\n                addEventListener('scroll', this.onScrollThrottled);\r\n            }\r\n        }\r\n\r\n\r\n        if (prevProps.throttleResize !== this.props.throttleResize) {\r\n            this.onResizeThrottled = throttle(this.onResize.bind(this), this.props.throttleResize, {\r\n                trailing: false,\r\n            });\r\n\r\n            if (this.state.isCustomContainerRef) {\r\n                this.props.containerRef.removeEventListener('resize', this.onResizeThrottled);\r\n                this.props.containerRef.addEventListener('resize', this.onResizeThrottled);\r\n            } else {\r\n                removeEventListener('resize', this.onResizeThrottled);\r\n                addEventListener('resize', this.onResizeThrottled);\r\n            }\r\n        }\r\n\r\n        if (prevProps.containerRef !== this.props.containerRef) {\r\n            // Tells us if a custom 'containerRef' has been supplied as a prop.  \r\n            if (this.props.containerRef !== (document.documentElement || 'html')) {\r\n                this.setState({ isCustomContainerRef: true });\r\n                removeEventListener('resize', this.onResizeThrottled);\r\n                removeEventListener('scroll', this.onScrollThrottled);\r\n                this.props.containerRef.addEventListener('resize', this.onResizeThrottled)\r\n                this.props.containerRef.addEventListener('scroll', this.onScrollThrottled);\r\n            } else {\r\n                this.setState({ isCustomContainerRef: false });\r\n                this.props.containerRef.removeEventListener('resize', this.onResizeThrottled);\r\n                this.props.containerRef.removeEventListener('scroll', this.onScrollThrottled);\r\n                addEventListener('resize', this.onResizeThrottled);\r\n                addEventListener('scroll', this.onScrollThrottled);\r\n            }\r\n            this.checkStatus();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.isCustomContainerRef) {\r\n            this.props.containerRef.removeEventListener('resize', this.onResizeThrottled);\r\n            this.props.containerRef.removeEventListener('scroll', this.onScrollThrottled);\r\n        } else {\r\n            removeEventListener('resize', this.onResizeThrottled);\r\n            removeEventListener('scroll', this.onScrollThrottled);\r\n        }\r\n    }\r\n\r\n    onResize() {\r\n        this.checkStatus();\r\n    }\r\n\r\n    onScroll() {\r\n        this.checkStatus();\r\n    }\r\n\r\n    checkStatus() {\r\n        const {\r\n            containerRef,\r\n            onEnter,\r\n            onExit,\r\n            onProgress,\r\n        } = this.props;\r\n\r\n        const {\r\n            lastScrollPosition,\r\n            lastScrollTime,\r\n        } = this.state;\r\n\r\n        const element = ReactDOM.findDOMNode(this.element);\r\n        const elementRect = element.getBoundingClientRect();\r\n        const viewportStart = 0;\r\n\r\n        const scrollingElement = typeof containerRef === 'string'\r\n            ? document.querySelector(containerRef)\r\n            : containerRef;\r\n\r\n        const viewportEnd = containerRef === document.documentElement\r\n            ? Math.max(containerRef.clientHeight, window.innerHeight || 0)\r\n            : scrollingElement.clientHeight;\r\n\r\n        const inViewport = elementRect.top <= viewportEnd && elementRect.bottom >= viewportStart;\r\n\r\n        const position = this.state.isCustomContainerRef\r\n            ? containerRef.scrollTop\r\n            : window.scrollY;\r\n\r\n        const velocity = lastScrollPosition && lastScrollTime\r\n            ? Math.abs((lastScrollPosition - position) / (lastScrollTime - Date.now()))\r\n            : null;\r\n\r\n        if (inViewport) {\r\n            const progress = Math.max(0, Math.min(1, 1 - (elementRect.bottom / (viewportEnd + elementRect.height))));\r\n\r\n            if (!this.state.inViewport) {\r\n                this.setState({\r\n                    inViewport,\r\n                });\r\n\r\n                onEnter({\r\n                    progress,\r\n                    velocity,\r\n                }, this);\r\n            }\r\n\r\n            onProgress({\r\n                progress,\r\n                velocity,\r\n            }, this);\r\n\r\n            this.setState({\r\n                lastScrollPosition: position,\r\n                lastScrollTime: Date.now(),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.inViewport) {\r\n            const progress = elementRect.top <= viewportEnd ? 1 : 0;\r\n\r\n            this.setState({\r\n                lastScrollPosition: position,\r\n                lastScrollTime: Date.now(),\r\n                inViewport,\r\n                progress,\r\n            });\r\n\r\n            onProgress({\r\n                progress,\r\n                velocity,\r\n            }, this);\r\n\r\n            onExit({\r\n                progress,\r\n                velocity,\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            children,\r\n            component,\r\n        } = this.props;\r\n\r\n        const elementMethod = React.isValidElement(component)\r\n            ? 'cloneElement'\r\n            : 'createElement';\r\n\r\n        return React[elementMethod](component, {\r\n            ...cleanProps(this.props, ['onProgress']),\r\n            ref: (element) => {\r\n                this.element = element;\r\n            },\r\n        },\r\n            children,\r\n        );\r\n    }\r\n}\r\n\r\nScrollTrigger.propTypes = {\r\n    component: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.node,\r\n    ]),\r\n    containerRef: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.string,\r\n    ]),\r\n    throttleResize: PropTypes.number,\r\n    throttleScroll: PropTypes.number,\r\n    triggerOnLoad: PropTypes.bool,\r\n    onEnter: PropTypes.func,\r\n    onExit: PropTypes.func,\r\n    onProgress: PropTypes.func,\r\n};\r\n\r\nScrollTrigger.defaultProps = {\r\n    component: 'div',\r\n    containerRef: (typeof document !== 'undefined') ? document.documentElement : 'html',\r\n    throttleResize: 100,\r\n    throttleScroll: 100,\r\n    triggerOnLoad: true,\r\n    onEnter: () => { },\r\n    onExit: () => { },\r\n    onProgress: () => { },\r\n};\r\n\r\nexport default ScrollTrigger;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ScrollTrigger from './react-scroll-trigger.js';\r\nimport './style.css';\r\n\r\nlet containerStyle = {\r\n    height: '400px',\r\n    overflow: 'scroll',\r\n    border: '1px dashed black'\r\n}\r\n\r\nlet fakePageStyle = {\r\n    height: '300px',\r\n    width: '300px',\r\n    border: '2px solid blue'\r\n}\r\n\r\nconst TOTAL_FAKE_PAGES = 6;\r\n\r\nlet example_code_how_to_use = `\r\n    /** \r\n     * Scrollable div container is needed\r\n     * \r\n     * We need the 'ref' from this container div, since this component will be loaded before our 'ref',\r\n     * is ready I find it easier to store the 'ref' in state. \r\n     */\r\n    \r\n    const [myRef, setMyRef] = useState();\r\n    \r\n    <div ref={r => setMyRef(r)} style={{ height: '300px', overflow: 'scroll'}}>\r\n        \r\n        {/** \r\n          * ScrollTrigger must use the 'ref' inside of the 'containerRef' prop!\r\n          *  \r\n          * Use an array of components. This allows you to trigger when a component\r\n          * becomes visible within the scrollable div \r\n          */}\r\n        {myObjects.map((obj, index) => {\r\n            return (\r\n                <ScrollTrigger                     \r\n                    containerRef={myRef} \r\n                    onEnter={e => alert(\\`\\${obj.attribute} at index \\${index} is now visible inside scrollable div!\\`)} \r\n                    onExit={e => alert(\\`\\${obj.attribute} at index \\${index} is no longer visible inside scrollable div!\\`)} \r\n                    onProgress={e => alert(\\`\\${obj.attribute} Progress: \\${e}\\`)} \r\n                    key={\\`\\${obj.attribute}_\\${index}\\`} \r\n                >\r\n                    <SomeOtherComponent someProp={obj.attribute} />\r\n                </ScrollTrigger>\r\n            )\r\n        })}\r\n    </div>\r\n`\r\n\r\n\r\nexport default function AppScrollTrigger() {\r\n    const [visible, setVisible] = useState([]);\r\n    const [progress, setProgress] = useState({});\r\n    const [regularEnter, setRegularEnter] = useState();\r\n    const [regularProgress, setRegularProgress] = useState();\r\n    const [myRef, setMyRef] = useState();\r\n\r\n    useEffect(() => {\r\n        INIT_SCROLL();\r\n    }, [])\r\n\r\n    const handleOnEnter = index => event => {\r\n        let newVisible = [...visible, index].sort();\r\n        setVisible(newVisible);\r\n    }\r\n\r\n    const handleOnExit = index => event => {\r\n        let newVisible = visible.filter(v => v !== index);\r\n        newVisible.sort();\r\n        setVisible(newVisible);\r\n    }\r\n\r\n    const handleOnProgress = index => event => {\r\n        let name = `Panel_${[index]}`;\r\n        setProgress({\r\n            ...progress,\r\n            [name]: event\r\n        });\r\n    }\r\n\r\n    const handleRegularEnter = message => _ => {\r\n        setRegularEnter(\"Setting message...\");\r\n        setTimeout(() => { setRegularEnter(message) }, 1200)\r\n    }\r\n\r\n    const handleRegularProgress = event => {\r\n        setRegularProgress(event);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={r => setMyRef(r)} style={containerStyle} >\r\n                <div id=\"placeholder_for_scroll_top\"></div> {/* YOU CAN IGNORE THIS */}\r\n\r\n                <div className=\"sticky\">\r\n                    <pre>VisiblePanels: {JSON.stringify(visible, null, 2)}</pre>\r\n                    <pre>ProgressData: {JSON.stringify(progress, null, 2)}</pre>\r\n                </div>\r\n\r\n                {Array.from(new Array(TOTAL_FAKE_PAGES), (el, index) => (\r\n                    <ScrollTrigger\r\n                        containerRef={myRef}\r\n                        onEnter={handleOnEnter(index)}\r\n                        onExit={handleOnExit(index)}\r\n                        onProgress={handleOnProgress(index)} >\r\n                        <div style={fakePageStyle}>\r\n                            Panel_{index}\r\n                        </div>\r\n                    </ScrollTrigger>\r\n                ))}\r\n\r\n                <div id=\"placeholder_for_scroll_bottom\"></div> {/* YOU CAN IGNORE THIS */}\r\n            </div>\r\n            <div className=\"ta-center\">\r\n                <h2>\r\n                    I wanted a way to be able to key on nested <code>div</code>'s within a <code>div</code>, which was not possible before.\r\n                </h2>\r\n                <h2>\r\n                    I made this demo to show how you can track <code>div</code>'s within a scrollable <code>div</code>, while still keeping the original functionality in tact.  \r\n                </h2>\r\n                <h2>\r\n                    If you scroll to the *very* bottom of this page, you can test out \"regular\" functionality. \r\n                </h2>\r\n                <h2>\r\n                    You can find the code for this demo <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/oze4/react-scroll-trigger-container\">at the following location...</a>\r\n                </h2>                \r\n            </div>\r\n            <div>\r\n                <h2>Example:</h2>\r\n                <pre>{example_code_how_to_use}</pre>\r\n            </div>\r\n            {Array.from(new Array(30), (el, index) => (\r\n                <p key={index}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse scelerisque, lectus in pharetra blandit, augue mauris pulvinar erat, ut euismod nibh lectus sed diam. Nulla fringilla ultrices ligula. Aliquam vitae felis metus. Maecenas lacinia bibendum accumsan. Curabitur lobortis convallis purus non imperdiet. Morbi ut vulputate mauris. Curabitur lacinia faucibus volutpat. Nulla elit tortor, rhoncus ut luctus eget, blandit in risus. Integer accumsan ullamcorper lorem id porttitor. Aliquam vitae libero eget magna mollis gravida.</p>\r\n            ))}\r\n            <ScrollTrigger onEnter={handleRegularEnter('HIII')} onProgress={handleRegularProgress}>\r\n                <div style={{ height: '100vh' }}>\r\n                    <h1>HIIIII</h1>\r\n                    <pre>onEnter('{regularEnter}')</pre>\r\n                    <pre>{JSON.stringify(regularProgress, null, 2)}</pre>\r\n                </div>\r\n            </ScrollTrigger>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction INIT_SCROLL() {\r\n    let b = document.getElementById(\"placeholder_for_scroll_bottom\");\r\n    let t = document.getElementById(\"placeholder_for_scroll_top\");\r\n    let to = 800;\r\n    setTimeout(() => { b.scrollIntoView() }, to);\r\n    setTimeout(() => { t.scrollIntoView() }, to + 200)\r\n}","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport AppScrollTrigger from './AppScrollTrigger'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: 'React'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppScrollTrigger />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}